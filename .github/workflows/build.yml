name: Build

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: qmkfm/qmk_cli
    strategy:
      fail-fast: false
      matrix:
        include:
          - layout: artsey_thepaintbrush
            hand: left
            size: std
          - layout: artsey_thepaintbrush
            hand: right
            size: std
          - layout: crkbd_rev1
            hand: left
            size: big
          - layout: crkbd_rev1
            hand: right
            size: big
          - layout: gergo
            hand: left
            size: big
          - layout: gergo
            hand: right
            size: big
          - layout: ristretto
            hand: left
            size: big
          - layout: ristretto
            hand: right
            size: big
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache - QMK Source
        uses: actions/cache@v2
        env:
          cache-name: cache-qmk_firmware
        with:
          path: /qmk_firmware
          key: ${{ env.cache-name }}-${{ matrix.layout }}-${{ matrix.size }}-${{ matrix.hand }}
      - name: Update QMK Sources
        run: |
            if [ -d /qmk_firmware/.git ]; 
            then 
                cd /qmk_firmware;
                git pull; 
            else 
                git clone https://github.com/qmk/qmk_firmware.git /qmk_firmware/; 
            fi
            if [ ! -d /qmk_firmware/keyboards/artsey ];
            then
                ln -s "${GITHUB_WORKSPACE}/keyboards/artsey" /qmk_firmware/keyboards/artsey;
                echo "Created keyboards/artsey symlink";
            fi
            if [ ! -d /qmk_firmware/users/artsey ];
            then
                ln -s "${GITHUB_WORKSPACE}/users/artsey" /qmk_firmware/users/artsey;
                echo "Created users/artsey symlink";
            fi
            qmk setup -y;
      - name: QMK Clean
        run: qmk clean
      - name: QMK Build
        run: |
            cd /qmk_firmware/users/artsey
            qmk compile -e ARTSEY_SIZE=${{ matrix.size }} -e ARTSEY_HAND=${{ matrix.hand }} layout/${{ matrix.layout }}.json
      - name: Debug - ls build artifact folder
        run: ls /qmk_firmware/.build
      - name: Prep artifacts
        run: cp /qmk_firmware/.build/${{ matrix.layout }}_artsey.hex /qmk_firmware/.build/artsey-${{ matrix.layout }}-${{ matrix.size }}-${{ matrix.hand }}.hex 
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "artsey-${{ matrix.layout }}-${{ matrix.size }}-${{ matrix.hand }}.hex"
          path: "/qmk_firmware/.build/artsey-${{ matrix.layout }}-${{ matrix.size }}-${{ matrix.hand }}.hex"
          if-no-files-found: error
          retention-days: 14
  release:
    runs-on: ubuntu-latest
    name: Create Release
    needs: build
    steps:
      - name: Get current date/time
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M')"
      - name: Generate release text
        id: release_text
        run: >
          echo "::set-output name=release_text::$(echo '<b>Precompiled firmware files for ARTSEY</b><br><br>
          Download a firmware file by expanding "Assets", right clicking, and choosing "Save File As" or "Save Link As".
          <br>${{ github.event.inputs.releaseBody }}
          <br>Released on ${{ steps.date.outputs.date }}.
          <br><br>${{ steps.docker_build.outputs.commits }}')"
      - name: Download build artifacts for release
        uses: actions/download-artifact@v2
        with:
          path: release
      - name: List files to include in release
        if: always()
        run: ls -R release/
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release/*"
          allowUpdates: false
          artifactErrorsFailBuild: true
          commit: main
          tag: ${{ steps.date.outputs.date }}
          body: ${{ steps.release_text.outputs.release_text }}
          name: ${{ steps.date.outputs.date }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
